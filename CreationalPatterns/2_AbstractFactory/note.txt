Tương tư về nguyên tắc hoạt động như Factory Method, nhưng:
- Factory Method: create an instance of several derived classes (tạo các instance có cùng nguồn gốc (cùng cha/kiểu))
- Abstract Factory: create an instance of several families of classes (tạo ra các nhóm/dòng họ các nhau)
-> Khác nhau về cái product mà nó tạo ra

Ví dụ: 
Ta muốn tạo ra các nhóm animal khác nhau: Linh trưởng animal, Bò sát animal,...
Lúc này ta cần đến Abstract Factory, để trả ra một factory mà chúng ta cần sử dụng

- Factory Method: subsystem của Abstract Factory
- Abstract Factory: sẽ bao nhiều Factory Method bên trong
- Abstract Factory sẽ kế thừa Factory Method

// Bổ sung
Ưu điểm:
- Tránh sự dính chặt vào nhau giữa các class, các class không nên
biết nhiều về nhau quá

- Single Responsibility Principle:
+ gom việc tạo product về 1 mối và đặt
ở 1 nơi duy nhất của chương trình => dễ bảo trì và support

- Open/Closed Principle:
+ "Open": code theo hướng mở rộng, hỗ trợ được thêm nhiều loại product
trong tương lai
+ "Closed": việc hỗ trợ thêm nhiều loại product nhưng hạn chế được sự
thay đổi code + không làm phá vỡ chương trình


